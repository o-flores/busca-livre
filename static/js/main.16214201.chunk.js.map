{"version":3,"sources":["components/SearchBar.jsx","services/api.js","actions/index.js","components/Categories.jsx","components/Loading.jsx","services/localStorage.js","components/AddToCart.jsx","components/ProductList.jsx","components/CartButton.jsx","components/Header.jsx","pages/Home.jsx","components/EmptyCart.jsx","components/CartItem.jsx","pages/Cart.jsx","components/ProductCard.jsx","pages/ProductDetails.jsx","pages/SignIn.jsx","App.js","serviceWorker.js","reducers/products.js","reducers/totalPrice.js","reducers/categories.js","reducers/productsList.js","reducers/user.js","reducers/index.js","store/index.js","index.js"],"names":["SearchBar","this","props","onClick","onChange","value","className","id","type","placeholder","React","Component","getCategories","a","fetch","response","data","json","getProductsFromCategoryAndQuery","categoryId","query","getCategoriesListError","payload","getProductsListError","loginAction","Categories","categories","getSelectedCategory","map","category","key","data-testid","name","connect","categoriesReducer","error","dispatch","Loading","getProductsFromStorage","JSON","parse","localStorage","getItem","saveProductsOnStorage","newProduct","products","newProducts","setItem","stringify","deleteCartItemFromLocalStorage","filter","product","getUserFromLocalStorage","AddToCart","saveProduct","add","quantity","ProductList","to","pathname","state","src","thumbnail","alt","title","price","CartButton","Header","refreshCart","login","user","href","length","cartReducer","userReducer","Home","handleOnChange","target","setState","handleClick","getProductsList","loading","handleRadio","ProductsListReducer","results","getProductsListThunk","EmptyCart","CartItem","handleOnclick","operation","decrease","itemQuantity","checkQuantity","available_quantity","handleDeleteCartItem","deleteItem","Cart","totalPrice","cartPrice","parseFloat","toFixed","totalPriceReducer","ProductCard","location","attributes","attribute","value_name","ProductDetails","SignIn","handleChange","handleSubmit","event","preventDefault","history","email","push","handleLogout","removeItem","islogged","onSubmit","htmlFor","disabled","App","path","exact","component","render","Boolean","window","hostname","match","INITIAL_STATE","action","find","indexOf","item","index","product_2","indexOf_2","newProduct_2","newProducts_2","reduce","acc","cur","productsListReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.16214201.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/searchbar.css';\nimport { FaSearch } from \"react-icons/fa\";\n\nclass SearchBar extends React.Component {\n  render() {\n    const { onClick, onChange, value } = this.props;\n    return (\n      <div className='container'>\n        <div id='search-div'>\n          <input\n            value={value}\n            type=\"text\"\n            onChange={onChange}\n            placeholder='buscar'\n          />\n          <button className='search-button' type=\"button\" onClick={onClick}>\n            <FaSearch />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n}.isRequired;\n\nexport default SearchBar;\n","export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // categoryId = ID de categoria do Mercado Livre\n  // query = termo digitado pelo usuario;\n  const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const data = response.json();\n  return data;\n}\n","import { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\n\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\nexport const addToCart = (payload) => ({\n  type: ADD_PRODUCT_TO_CART,\n  payload,\n});\n\nexport const REFRESH_CART =  'REFRESH_CART';\nexport const refreshCart = (payload) => ({\n  type: REFRESH_CART,\n  payload,\n});\n\nexport const ADD_QUANTITY_CART_ITEM = 'ADD_QUANTITY_CART_ITEM';\nexport const addQuantity = (payload) => ({\n  type: ADD_QUANTITY_CART_ITEM,\n  payload,\n});\n\n\nexport const DECREASE_QUANTITY_CART_ITEM = 'DECREASE_QUANTITY_CART_ITEM';\nexport const decreaseQuantity = (payload) => ({\n  type: DECREASE_QUANTITY_CART_ITEM,\n  payload,\n});\n\n\nexport const DELETE_CART_ITEM = 'DELETE_CART_ITEM';\nexport const deleteCartItem = (payload) => ({\n  type: DELETE_CART_ITEM,\n  payload,\n})\n\n\nexport const UPDATE_CART_PRICE = 'UPDATE_CART_PRICE';\nexport const updateCartPrice = (payload) => ({\n  type: UPDATE_CART_PRICE,\n  payload,\n})\n\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nexport const GET_CATEGORIES_ERROR = 'GET_CATEGORIES_ERROR';\nexport const SELECTED_CATEGORY = 'SELECTED_CATEGORY';\n\nexport const getCategoriesListsSuccess = (payload) => ({\n  type: GET_CATEGORIES_SUCCESS,\n  payload,\n});\n\nexport const getCategoriesListError = (payload) => ({\n  type: GET_CATEGORIES_ERROR,\n  payload,\n});\n\nexport const getCategoriesListThunk = () => async (dispatch) => {\n  try {\n    const data = await getCategories();\n    dispatch(getCategoriesListsSuccess(data));\n  }\n  catch (error) {\n    dispatch(getCategoriesListError(error));\n  }\n};\n\nexport const getSelectedCategory = (payload) => ({\n  type: SELECTED_CATEGORY,\n  payload,\n});\n\nexport const GET_PRODUCTS_LIST = 'GET_PRODUCTS_LIST';\nexport const GET_PRODUCTS_LIST_SUCCESS = 'GET_PRODUCTS_LIST_SUCCESS';\nexport const GET_PRODUCTS_LIST_ERROR = 'GET_PRODUCTS_LIST_ERROR';\n\nexport const getProductsList = () => ({\n  type: GET_PRODUCTS_LIST,\n});\n\nexport const getProductsListSuccess = (payload) => {\n  if(payload.results.length === 0) {\n    payload.results = null;\n  }\n  return {\n    type: GET_PRODUCTS_LIST_SUCCESS,\n    payload,  \n  }\n  \n};\nexport const getProductsListError = (payload) => ({\n  type: GET_PRODUCTS_LIST_ERROR,\n  payload,\n});\n\nexport const getProductsListThunk = ({categoryId, query}) => async (dispatch) => {\n  dispatch(getProductsList());\n  try {\n    const data = await getProductsFromCategoryAndQuery(categoryId, query);\n    dispatch(getProductsListSuccess(data));\n  }\n  catch (error) {\n    dispatch(getProductsListError(error));\n  }\n};\n\nexport const LOGIN = 'LOGIN';\nexport const loginAction = (payload) => ({\n  type: LOGIN,\n  payload,\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/categories.css';\nimport { connect } from 'react-redux';\nimport { getCategoriesListThunk, getSelectedCategory } from '../actions';\n\nclass Categories extends React.Component {\n\n  componentDidMount() {\n    const { getCategories } = this.props;\n    getCategories();\n  }\n\n  render() {\n    const { categories, getSelectedCategory } = this.props;\n    return (\n      <div>\n        <ol className=\"categories-list\">\n          <h2>Categorias</h2>\n          {categories.map((category) => (\n            <li key={ category.id }>\n              <input\n                data-testid=\"category\"\n                type=\"radio\"\n                id={ category.id }\n                name=\"categorias\"\n                onClick={ () => getSelectedCategory(category.id) }\n              />\n              {category.name}\n            </li>))}\n            <br></br>\n        </ol>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({categoriesReducer: { categories, error }}) => ({\n  categories,\n  error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCategories: () => dispatch(getCategoriesListThunk()),\n  getSelectedCategory: (id) => dispatch(getSelectedCategory(id))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n\n\nCategories.propTypes = {\n  onClick: PropTypes.func,\n}.isRequired;\n","import React from 'react';\nimport '../styles/loading.css'\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className='loading-container'>\n        <div className='spin' />\n        <div>Carregando...</div>\n      </div>\n    )\n  }\n}\n\nexport default Loading;\n","export function getProductsFromStorage() {\n  const products = JSON.parse(localStorage.getItem('products')) || [];\n  return products;\n}\n\nexport function saveProductsOnStorage(newProduct) {\n  const products = getProductsFromStorage();\n  const newProducts = [...products, newProduct];\n  localStorage.setItem('products', JSON.stringify(newProducts));\n}\n\nexport function deleteCartItemFromLocalStorage(id) {\n  const products = getProductsFromStorage();\n  const newProducts = products.filter((product) => product.id !== id);\n  localStorage.setItem('products', JSON.stringify(newProducts));\n  return newProducts;\n}\n\nexport function saveUserToLocalStorage(user) {\n  localStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function getUserFromLocalStorage() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user;\n}\n\nexport function logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('products');\n\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/addtocart.css';\nimport { connect } from 'react-redux';\nimport { addToCart } from '../actions/index';\nimport { saveProductsOnStorage } from '../services/localStorage';\n\nclass AddToCart extends Component {\n  saveProduct = () => {\n    const { product, add } = this.props;\n    product.quantity = 1;\n    add(product);\n    saveProductsOnStorage(product);\n  }\n\n  render() {\n    return (\n      <div className='button-container'>\n        <button\n          type=\"button\"\n          id=\"button-add-to-cart\"\n          onClick={ this.saveProduct }\n        >\n          Adicione ao carrinho\n        </button>\n      </div>\n\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  add: (product) => dispatch(addToCart(product)),\n})\n\nAddToCart.propTypes = {\n  products: PropTypes.object,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(AddToCart);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../styles/products.css';\nimport AddToCart from './AddToCart';\n\nclass ProductList extends React.Component {\n  render() {\n    const { products } = this.props;\n    if (products === null) return <h2 className=\"no-product\">Nenhum produto foi encontrado</h2>;\n    if (!products) return null;\n    return (\n      <div className=\"products-container\">\n        { products.map((product) => (\n          <div className=\"product\" key={product.id}>\n            <Link\n              className='details'\n              to={{\n                pathname: `/produto/${product.id}`,\n                state: { product },\n              }}>\n              <img src={product.thumbnail} alt={product.title} />\n            </Link>\n            <Link\n              className='details'\n              to={{\n                pathname: `/produto/${product.id}`,\n                state: { product },\n              }}>\n              <p className='title'>{product.title}</p>\n            </Link>\n            <p className='price'>{`${product.price} R$`}</p>\n            <AddToCart product={ product }/>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nProductList.propTypes = {\n  products: PropTypes.array,\n  isClicked: PropTypes.bool,\n}.isRequired;\n\nexport default (ProductList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiShoppingCart } from 'react-icons/fi';\nimport '../styles/cartbutton.css';\n\nclass CartButton extends React.Component {\n  render() {\n    return (\n      <Link to=\"/cart\">\n        <FiShoppingCart id='cart'/>\n      </Link>\n    );\n  }\n}\n\nexport default CartButton;\n","import React from 'react';\nimport '../styles/header.css'\nimport { Link } from 'react-router-dom';\nimport CartButton from '../components/CartButton';\nimport { MdPersonOutline } from 'react-icons/md';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { connect } from 'react-redux';\nimport { getProductsFromStorage, getUserFromLocalStorage } from '../services/localStorage';\nimport { refreshCart, loginAction } from '../actions';\n\nclass Header extends React.Component {\n\n  componentDidMount() {\n    const { refreshCart, login } = this.props;\n    const newProducts = getProductsFromStorage();\n    refreshCart(newProducts);\n\n    const user = getUserFromLocalStorage();\n    if (!user) return;\n    if (user) login(user);\n  }\n\n  render() {\n    const { products, user } = this.props;\n    return (\n      <header>\n        <div className='left-container'>\n          <div className='logo'>\n            <a href='/busca-livre'><b><span>Busca Livre</span></b></a>\n          </div>\n        </div>\n        <div>\n          {user.name ? `Seja bem-vindo, ${user.name}` : 'Faça Login para aproveitar as promoções'}\n        </div>\n        <nav className='right-container'>\n          <span>Sobre nós</span>\n          <IoIosArrowDown />\n          <Link to='/signup'><MdPersonOutline className='sign-in' /></Link>\n          <CartButton />\n          <span className='products-counter-container'>{products.length > 0 && <span className='products-counter'>{products.length}</span>}</span>\n        </nav>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = ({ cartReducer: { products }, userReducer: { user } }) => ({\n  products,\n  user,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  refreshCart: (products) => dispatch(refreshCart(products)),\n  login: (state) => dispatch(loginAction(state)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport SearchBar from '../components/SearchBar';\nimport Categories from '../components/Categories';\nimport Loading from '../components/Loading';\nimport ProductList from '../components/ProductList';\nimport { connect } from 'react-redux';\nimport { getProductsListThunk } from '../actions';\nimport Header from '../components/Header';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n    };\n  }\n\n  handleOnChange = ({ target: { value } }) => {\n    this.setState({ query: value });\n  }\n\n  handleClick = () => {\n    const { getProductsList, categoryId } = this.props;\n    const { query } = this.state;\n    getProductsList({ categoryId, query })\n  }\n\n  render() {\n    const { query } = this.state;\n    const { products, loading } = this.props;\n    return (\n      <>\n        <Header />\n        <SearchBar\n          value={query}\n          onClick={this.handleClick}\n          onChange={this.handleOnChange}\n        />\n        <Categories onClick={this.handleRadio} />\n        {loading && <Loading />}\n        <ProductList products={products} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ProductsListReducer: { products, loading }, categoriesReducer: { categoryId } }) => ({\n  products,\n  loading,\n  categoryId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProductsList: (payload) => dispatch(getProductsListThunk(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport '../styles/emptycart.css'\n\nclass EmptyCart extends React.Component {\n  render() {\n    return (\n      <h2 className=\"shopping-cart-empty-message\">\n        Seu carrinho está vazio\n      </h2>\n    );\n  }\n}\n\nexport default EmptyCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/cartItem.css'\nimport { FaPlus, FaMinus, FaTrash } from \"react-icons/fa\";\nimport { connect } from 'react-redux';\nimport { addQuantity, decreaseQuantity, deleteCartItem } from '../actions'\nimport { deleteCartItemFromLocalStorage } from '../services/localStorage';\n\nclass CartItem extends React.Component {\n\n  handleOnclick = (operation, product) => {\n    const { add, decrease, itemQuantity } = this.props;\n    if (operation === 'add') {\n      if (this.checkQuantity()) {\n        add(product);\n      }\n    } else if (itemQuantity > 1) {\n        decrease(product);\n    }\n  }\n\n  checkQuantity = () => {\n    const { product: { available_quantity }, itemQuantity } = this.props;\n    if (itemQuantity + 1 <= available_quantity) return true;\n  }\n\n  handleDeleteCartItem = (product) => {\n    const { deleteItem } = this.props;\n    deleteItem(product);\n    deleteCartItemFromLocalStorage(product.id);\n  }\n\n  render() {\n    const { product, itemQuantity} = this.props;\n    const { title, price, thumbnail } = product;\n    return (\n      <div className='cart-item-container'>\n        <img src={thumbnail} alt={title} />\n        <div className='cart-item-info'>\n          <p>{title}</p>\n          <p>{`${price} R$`}</p>\n          <div className='cart-item-quantity'>\n            <FaMinus\n              className='button-quantity'\n              onClick={() => this.handleOnclick('sub', product)}\n              type=\"button\"\n            >\n            </FaMinus>\n            <p>{itemQuantity}</p>\n            <FaPlus\n              className='button-quantity'\n              onClick={() => this.handleOnclick('add', product)}\n              type=\"button\"\n            >\n            </FaPlus>\n          </div>\n          <FaTrash\n            onClick={() => this.handleDeleteCartItem(product)}\n          />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  add: (product) => dispatch(addQuantity(product)),\n  decrease: (product) => dispatch(decreaseQuantity(product)),\n  deleteItem: (product) => dispatch(deleteCartItem(product)),\n});\n\nCartItem.propTypes = {\n  product: PropTypes.object,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(CartItem);\n","import React from 'react';\nimport EmptyCart from '../components/EmptyCart';\nimport CartItem from '../components/CartItem';\nimport '../styles/cart.css'\nimport { connect } from 'react-redux';\nimport { updateCartPrice } from '../actions';\nimport { getProductsFromStorage } from '../services/localStorage';\nimport Header from '../components/Header';\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalPrice: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { cartPrice } = this.props;\n    const newProducts = getProductsFromStorage();\n    cartPrice(newProducts);\n  }\n\n  componentDidUpdate() {\n    const { cartPrice, products } = this.props;\n    cartPrice(products);\n  }\n\n  render() {\n    const { products, totalPrice } = this.props;\n    return (\n      <>\n        <Header />\n        <div>\n          {products.length === 0 && <EmptyCart />}\n          {products.length > 0 && products.map((product) => (\n            <CartItem\n              deleteItem={this.deleteItem}\n              key={product.id}\n              product={product}\n              onChange={this.handleOnChange}\n              itemQuantity={product.quantity}\n            />\n          ))}\n          <div className='total-price-container'>\n            {products.length > 0 && <b><p>{`Preço total: ${parseFloat(totalPrice).toFixed(2)} R$`}</p></b>}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ cartReducer: { products }, totalPriceReducer: { totalPrice } }) => ({\n  products,\n  totalPrice,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  cartPrice: (products) => dispatch(updateCartPrice(products)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { string } from 'prop-types';\nimport AddToCart from './AddToCart';\nimport '../styles/productCard.css'\n\nclass ProductCard extends React.Component {\n  render() {\n    const {\n      props: { location: { state: { product: {\n        thumbnail,\n        title,\n        price,\n        attributes,\n      } } } } } = this.props;\n    const { props: { location: { state: { product } } } } = this.props;\n    return (\n      <div className='product-card'>\n        <div className='photo-container'>\n          <img src={thumbnail} alt={title} />\n        </div>\n        <div className='product-info-container'>\n          <h1>{title}</h1>\n          <h2>{` R$: ${price} `}</h2>\n          <ul>\n            {attributes.map((attribute) => (\n              <li key={attribute.id}>\n                { `${attribute.name}: ${attribute.value_name}`}\n              </li>\n            ))}\n          </ul>\n          <br />\n          <AddToCart product={product} />\n        </div>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  thumbnail: string,\n}.isRequired;\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from '../components/ProductCard';\nimport Header from '../components/Header';\n\nclass ProductDetails extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <ProductCard props={ this.props } />\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.object,\n}.isRequired;\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loginAction } from '../actions';\nimport Header from '../components/Header';\nimport { getUserFromLocalStorage, saveUserToLocalStorage, logout } from '../services/localStorage';\nimport '../styles/signin.css'\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      islogged: false,\n    }\n  }\n\n  componentDidMount() {\n    const user = getUserFromLocalStorage();\n    if (!user) return;\n    if (user.name) this.setState({ islogged: true })\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { login, history } = this.props;\n    const { name, email } = this.state;\n    login({ name, email });\n    saveUserToLocalStorage({ name, email });\n    history.push('/busca-livre')\n  }\n\n  handleLogout = () => {\n    const { history } = this.props;\n    logout();\n  }\n\n  render() {\n    const { name, email, islogged } = this.state;\n    return (\n      <>\n        <Header />\n        {islogged ? (\n          <div className=\"logout-container\">\n            <h3>Você já esta logado, caso queira se deslogar clique no botão abaixo</h3>\n            <a href=\"/busca-livre\"><button className=\"user-login-logout\" onClick={ this.handleLogout }>Logout</button></a>\n          </div>\n        ) : (\n          <form className=\"login-form\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">\n              Nome:\n              <input\n                onChange={this.handleChange}\n                value={name}\n                type='text'\n                name=\"name\"\n              />\n            </label>\n            <label htmlFor=\"name\">\n              Email:\n              <input\n                onChange={this.handleChange}\n                value={email}\n                type='text'\n                name=\"email\"\n              />\n            </label>\n            <div>\n            <button\n              type='submit'\n              disabled={!(email && name)}\n              className=\"user-login-logout\"\n            >\n              Login\n            </button>\n            </div>\n          </form>\n        )}\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (state) => dispatch(loginAction(state)),\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport ProductDetails from './pages/ProductDetails';\nimport SignIn from './pages/SignIn';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/busca-livre\" exact component={ Home } />\n          <Route path=\"/cart\" exact component={ Cart } />\n          <Route\n            path=\"/produto/:id\"\n            render={ (props) => <ProductDetails { ...props } /> }\n          />\n          <Route\n            path=\"/signup\"\n            render={ (props) => <SignIn { ...props } />}\n          />\n          \n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_PRODUCT_TO_CART,\n  DELETE_CART_ITEM,\n  ADD_QUANTITY_CART_ITEM,\n  DECREASE_QUANTITY_CART_ITEM,\n  REFRESH_CART\n} from '../actions';\nconst INITIAL_STATE = {\n  products: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case REFRESH_CART:\n      return {\n        ...state,\n        products: action.payload,\n      }\n    case ADD_PRODUCT_TO_CART:\n      return {\n        ...state,\n        products: [...state.products, action.payload],\n      }\n    case DELETE_CART_ITEM:\n      return {\n        ...state,\n        products: state.products.filter((product) => product.id !== action.payload.id),\n      }\n      case ADD_QUANTITY_CART_ITEM:\n        const product = state.products.find((product) => product.id === action.payload.id);\n        const indexOf = state.products.indexOf(product);\n        product.quantity += 1;\n        const newProduct = product;\n        const newProducts = state.products.map((item,index) => {\n          if(index === indexOf) {\n            return newProduct;\n          }\n          return item;\n        })\n        return {\n          ...state,\n          products: newProducts,\n        }\n      case DECREASE_QUANTITY_CART_ITEM:\n        const product_2 = state.products.find((product) => product.id === action.payload.id);\n        const indexOf_2 = state.products.indexOf(product_2);\n        product_2.quantity -= 1;\n        const newProduct_2 = product_2;\n        const newProducts_2 = state.products.map((item,index) => {\n          if(index === indexOf_2) {\n            return newProduct_2;\n          }\n          return item;\n        })\n        return {\n          ...state,\n          products: newProducts_2,\n        }\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import { UPDATE_CART_PRICE } from '../actions';\nconst INITIAL_STATE = {\n  totalPrice: 0,\n};\n\nconst totalPriceReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n      case UPDATE_CART_PRICE:\n        return {\n          ...state,\n          totalPrice: action.payload.reduce((acc, cur) => acc + (cur.price * cur.quantity), 0),\n        }\n    default:\n      return state;\n  }\n};\n\nexport default totalPriceReducer;\n","import { GET_CATEGORIES_SUCCESS, GET_CATEGORIES_ERROR, SELECTED_CATEGORY } from '../actions';\n\nconst INITIAL_STATE = {\n  categories: [],\n  error: null,\n  categoryId: '',\n};\n\nconst categoriesReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case GET_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload,\n      }\n      case GET_CATEGORIES_ERROR:\n        return {\n          ...state,\n          error: action.payload\n        }\n      case SELECTED_CATEGORY: \n        return {\n          ...state,\n          categoryId: action.payload,\n        }\n    default:\n      return state;\n  }\n};\n\nexport default categoriesReducer;","import { GET_PRODUCTS_LIST,GET_PRODUCTS_LIST_SUCCESS, GET_PRODUCTS_LIST_ERROR } from '../actions';\n\nconst INITIAL_STATE = {\n  products: false,\n  error: null,\n  loading: false,\n};\n\nconst productsListReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case GET_PRODUCTS_LIST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case GET_PRODUCTS_LIST_SUCCESS:\n      return {\n        ...state,\n        products: action.payload.results,\n        loading: false,\n      }\n      case GET_PRODUCTS_LIST_ERROR:\n        return {\n          ...state,\n          error: action.payload,\n          loading: false,\n        }\n    default:\n      return state;\n  }\n};\n\nexport default productsListReducer;","import { LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  user: {\n    name: '',\n    email: '',\n  }\n}\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        user: action.payload,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;","import { combineReducers } from 'redux';\nimport cartReducer from './products';\nimport totalPriceReducer from './totalPrice';\nimport categoriesReducer from './categories';\nimport ProductsListReducer from './productsList';\nimport userReducer from './user';\n\nconst rootReducer = combineReducers({\n  cartReducer,\n  totalPriceReducer,\n  categoriesReducer,\n  ProductsListReducer,\n  userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n)\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}