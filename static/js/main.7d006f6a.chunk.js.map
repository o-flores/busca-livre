{"version":3,"sources":["components/SearchBar.jsx","services/api.js","components/Categories.jsx","components/Loading.jsx","components/ProductList.jsx","pages/Home.jsx","components/EmptyCart.jsx","components/CartItem.jsx","services/localStorage.js","pages/Cart.jsx","components/AddToCart.jsx","components/ProductCard.jsx","pages/ProductDetails.jsx","components/CartButton.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","this","props","onClick","onChange","value","className","id","type","placeholder","React","Component","getCategories","a","fetch","response","data","json","getProductsFromCategoryAndQuery","categoryId","query","Categories","state","categories","handleCategories","bind","api","then","setState","map","category","key","data-testid","name","Loading","ProductList","products","product","to","pathname","src","thumbnail","alt","title","price","Home","handleOnChange","event","target","input","handleClick","handleProductsList","radio","loading","results","length","handleRadio","EmptyCart","CartItem","handleOnclick","operation","quantity","checkQuantity","prevState","updateTotalPrice","totalPrice","available_quantity","deleteItem","getProductsFromStorage","JSON","parse","localStorage","getItem","Cart","getFromLocalStorage","storageFunction","sumPrices","reduce","acc","cur","find","newProducts","filter","setItem","stringify","AddToCart","handleLocalStorage","ProductCard","location","attributes","attribute","value_name","ProductDetails","CartButton","Header","href","App","path","exact","component","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7d006f6a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/searchbar.css';\nimport { FaSearch } from \"react-icons/fa\";\n\nclass SearchBar extends React.Component {\n  render() {\n    const { onClick, onChange, value } = this.props;\n    return (\n      <div className='container'>\n        <div id='search-div'>\n          <input\n            value={value}\n            type=\"text\"\n            onChange={onChange}\n            placeholder='buscar'\n          />\n          <button className='search-button' type=\"button\" onClick={onClick}>\n            <FaSearch />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n}.isRequired;\n\nexport default SearchBar;\n","export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // categoryId = ID de categoria do Mercado Livre\n  // query = termo digitado pelo usuario;\n  const response = await fetch(` https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const data = response.json();\n  return data;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport '../styles/categories.css'\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n    };\n    this.handleCategories = this.handleCategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleCategories();\n  }\n\n  async handleCategories() {\n    api.getCategories().then((data) => {\n      this.setState({ categories: data });\n    });\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { onClick } = this.props;\n    return (\n      <div>\n        <ol className=\"categories-list\">\n          <h2>Categorias</h2>\n          {categories.map((category) => (\n            <li key={ category.id }>\n              <input\n                data-testid=\"category\"\n                type=\"radio\"\n                id={ category.id }\n                name=\"categorias\"\n                onClick={ onClick }\n              />\n              {category.name}\n            </li>))}\n            <br></br>\n        </ol>\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  onClick: PropTypes.func,\n}.isRequired;\n\nexport default Categories;\n","import React from 'react';\nimport '../styles/loading.css'\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className='loading-container'>\n        <div className='spin' />\n        <div>Carregando...</div>\n      </div>\n    )\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../styles/products.css';\n\nclass ProductList extends React.Component {\n  render() {\n    const { products } = this.props;\n\n    if (products === 'none') return <p>Nenhum produto foi encontrado</p>;\n    return (\n      <div className=\"products-container\">\n        { products.map((product) => (\n          <div className=\"product\" key={product.id}>\n            <Link\n              className='details'\n              to={{\n                pathname: `/produto/${product.id}`,\n                state: { product },\n              }}>\n              <img src={product.thumbnail} alt={product.title} />\n            </Link>\n            <Link\n              className='details'\n              to={{\n                pathname: `/produto/${product.id}`,\n                state: { product },\n              }}>\n              <p className='title'>{product.title}</p>\n            </Link>\n            <p className='price'>{`${product.price} R$`}</p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nProductList.propTypes = {\n  products: PropTypes.array,\n  isClicked: PropTypes.bool,\n}.isRequired;\n\nexport default ProductList;\n","import React from 'react';\nimport SearchBar from '../components/SearchBar';\nimport Categories from '../components/Categories';\nimport Loading from '../components/Loading';\nimport * as api from '../services/api';\nimport ProductList from '../components/ProductList';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      input: '',\n      products: [],\n      radio: '',\n    };\n  }\n\n  handleOnChange = (event) => {\n    const { value } = event.target;\n    this.setState({ input: value });\n  }\n\n  handleClick = () => {\n    this.handleProductsList();\n  }\n\n  handleProductsList = () => {\n    const { input, radio } = this.state;\n    this.setState({ loading: true, products: [] }, async () => {\n      const { results } = await api.getProductsFromCategoryAndQuery(radio, input);\n      if (results.length === 0) this.setState({ products: 'none' });\n      else this.setState({ products: results });\n      this.setState({ loading: false });\n    });\n  }\n\n  handleRadio = (event) => {\n    const { id } = event.target;\n    this.setState({ radio: id }, () => this.handleProductsList());\n  }\n\n  render() {\n    const { products, loading, input } = this.state;\n    return (\n      <>\n        <SearchBar\n          value={ input }\n          onClick={ this.handleClick }\n          onChange={ this.handleOnChange }\n        />\n        <Categories onClick={ this.handleRadio } />\n        { loading && <Loading /> }\n        <ProductList products={ products } />\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nclass EmptyCart extends React.Component {\n  render() {\n    return (\n      <p data-testid=\"shopping-cart-empty-message\">\n        Seu carrinho está vazio\n      </p>\n    );\n  }\n}\n\nexport default EmptyCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/cartItem.css'\nimport { FaPlus, FaMinus, FaTrash } from \"react-icons/fa\";\n\nclass CartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    const { product: { price } } = this.props;\n    this.state = {\n      quantity: 1,\n      totalPrice: price,\n    };\n  }\n\n  handleOnclick = (operation, id) => {\n    const { quantity } = this.state;\n    if (operation === 'add') {\n      if (this.checkQuantity()) {\n      this.setState((prevState) => ({\n        quantity: prevState.quantity + 1,\n      }), () => this.updateTotalPrice(id))};\n    } else if (quantity > 1) {\n      this.setState((prevState) => ({\n        quantity: prevState.quantity - 1,\n      }), () => this.updateTotalPrice(id));\n    }\n  }\n\n  updateTotalPrice = (id) => {\n    const { onChange } = this.props;\n    const { product: { price } } = this.props;\n    const { quantity } = this.state;\n    this.setState({\n      totalPrice: price * quantity,\n    }, () => {\n      const { totalPrice } = this.state;\n      onChange(id, totalPrice);\n    });\n  }\n\n  checkQuantity = () => {\n    const { quantity } = this.state;\n    const { product } = this.props;\n    const { available_quantity } = product;\n    if (quantity + 1 <= available_quantity) return true;\n  }\n\n  render() {\n    const { product, deleteItem } = this.props;\n    const { title, price, thumbnail, id } = product;\n    const { quantity } = this.state;\n    return (\n      <div className='cart-item-container'>\n        <img src={thumbnail} alt={title} />\n        <div className='cart-item-info'>\n          <p>{title}</p>\n          <p>{`${price} R$`}</p>\n          <div className='cart-item-quantity'>\n            <FaMinus\n              className='button-quantity'\n              onClick={() => this.handleOnclick('sub', id)}\n              type=\"button\"\n            >\n            </FaMinus>\n            <p>{ quantity }</p>\n            <FaPlus\n              className='button-quantity'\n              onClick={() => this.handleOnclick('add', id)}\n              type=\"button\"\n            >\n            </FaPlus>\n          </div>\n          <FaTrash\n          onClick={ () => deleteItem(id) }\n          />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nCartItem.propTypes = {\n  product: PropTypes.object,\n}.isRequired;\n\nexport default CartItem;\n","export function getProductsFromStorage() {\n  const products = JSON.parse(localStorage.getItem('products')) || [];\n  return products;\n}\n\nexport function saveProductsOnStorage(newProduct) {\n  const products = getProductsFromStorage();\n  const newProducts = [...products, newProduct];\n  localStorage.setItem('products', JSON.stringify(newProducts));\n}\n\nexport function deleteItem(id) {\n  const products = getProductsFromStorage();\n  const newProducts = products.filter((product) => product.id !== id);\n  localStorage.setItem('products', JSON.stringify(newProducts));\n  return newProducts;\n}\n","import React from 'react';\nimport EmptyCart from '../components/EmptyCart';\nimport CartItem from '../components/CartItem';\nimport '../styles/cart.css'\nimport * as storageFunction from '../services/localStorage';\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      totalPrice: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.getFromLocalStorage();\n  }\n\n  getFromLocalStorage = () => {\n    const products = storageFunction.getProductsFromStorage();\n    this.setState({\n      products,\n    });\n    this.sumPrices(products);\n  }\n\n  sumPrices = (products) => {\n    const totalPrice = products.reduce((acc, cur) => acc + cur.price, 0);\n    this.setState({ totalPrice });\n  }\n\n  handleOnChange = (id, totalPrice) => {\n    const products = storageFunction.getProductsFromStorage();\n    const productObject = products.find((product) => product.id === id);\n    productObject.price = totalPrice;\n    this.sumPrices(products);\n  }\n\n  deleteItem = (id) => {\n    const products = storageFunction.deleteItem(id);\n    this.setState({ products })\n    this.sumPrices(products);\n  }\n\n  render() {\n    const { products, totalPrice } = this.state;\n    return (\n      <div>\n        {products.length === 0 && <EmptyCart />}\n        { products.length > 0 && products.map((product) => (\n          <CartItem\n            deleteItem={ this.deleteItem }\n            key={ product.id }\n            product={ product }\n            onChange={ this.handleOnChange }\n          />\n        )) }\n        <div className='total-price-container'>\n          {products.length > 0 && <b><p>{`Preço total: ${totalPrice} R$`}</p></b>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/addtocart.css'\n\nclass AddToCart extends Component {\n  render() {\n    return (\n      <div className='button-container'>\n        <button\n          type=\"button\"\n          id=\"button-add-to-cart\"\n          onClick={ this.handleLocalStorage }\n        >\n          Adicione ao carrinho\n        </button>\n      </div>\n\n    );\n  }\n}\n\nAddToCart.propTypes = {\n  products: PropTypes.object,\n}.isRequired;\n\nexport default AddToCart;\n","import React from 'react';\nimport { string } from 'prop-types';\nimport AddToCart from './AddToCart';\nimport '../styles/productCard.css'\n\nclass ProductCard extends React.Component {\n  render() {\n    const {\n      props: { location: { state: { product: {\n        thumbnail,\n        title,\n        price,\n        attributes,\n      } } } } } = this.props;\n    const { props: { location: { state: { product } } } } = this.props;\n    return (\n      <div className='product-card'>\n        <div className='photo-container'>\n          <img src={thumbnail} alt={title} />\n        </div>\n        <div className='product-info-container'>\n          <h1>{title}</h1>\n          <h2>{` R$: ${price} `}</h2>\n          <ul>\n            {attributes.map((attribute) => (\n              <li key={attribute.id}>\n                { `${attribute.name}: ${attribute.value_name}`}\n              </li>\n            ))}\n          </ul>\n          <br />\n          <AddToCart product={product} />\n        </div>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  thumbnail: string,\n}.isRequired;\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from '../components/ProductCard';\n\nclass ProductDetails extends React.Component {\n  render() {\n    return (\n      <>\n        <ProductCard props={ this.props } />\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.object,\n}.isRequired;\n\nexport default ProductDetails;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiShoppingCart } from 'react-icons/fi'\nimport '../styles/cartbutton.css'\n\nclass CartButton extends React.Component {\n  render() {\n    return (\n      <Link to=\"/cart\">\n        <FiShoppingCart id='cart'/>\n      </Link>\n    );\n  }\n}\n\nexport default CartButton;\n","import React from 'react';\nimport '../styles/header.css'\nimport { Link } from 'react-router-dom';\nimport CartButton from '../components/CartButton'\nimport { MdPersonOutline } from 'react-icons/md'\nimport { IoIosArrowDown } from 'react-icons/io'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <div className='left-container'>\n          <div className='logo'>\n            <a href='/busca-livre'><b><span>Busca Livre</span></b></a>\n          </div>\n        </div>\n        <nav className='right-container'>\n          <span>Sobre nós</span>\n          <IoIosArrowDown/>\n          <Link to='/signup'><MdPersonOutline className='sign-in' /></Link>\n          <CartButton />\n        </nav>\n        \n        \n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport ProductDetails from './pages/ProductDetails';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Header/>\n        <Switch>\n          <Route path=\"/busca-livre\" exact component={ Home } />\n          <Route path=\"/cart\" exact component={ Cart } />\n          <Route\n            path=\"/produto/:id\"\n            render={ (props) => <ProductDetails { ...props } /> }\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}